// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/analysis/{id}": {
            "get": {
                "description": "Retrieves contract analysis by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract Analysis"
                ],
                "summary": "Get analysis by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Analysis ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract analysis record",
                        "schema": {
                            "$ref": "#/definitions/repository.ContractAnalysisRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contract-analyses": {
            "get": {
                "description": "Lists contract analyses with optional filtering and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract Analysis"
                ],
                "summary": "List contract analyses",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of contract analyses",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contract-analysis/{contract_id}": {
            "get": {
                "description": "Retrieves comprehensive analysis results for a specific contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract Analysis"
                ],
                "summary": "Get contract analysis by contract ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "contract_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract analysis record",
                        "schema": {
                            "$ref": "#/definitions/repository.ContractAnalysisRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contracts/analyze": {
            "post": {
                "description": "Upload a document (PDF preferred). If scanned, pages are rasterized and OCR'd. The extracted text is analyzed using LLM prompts to return structured JSON.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analysis"
                ],
                "summary": "Analyze a contract document",
                "parameters": [
                    {
                        "type": "file",
                        "description": "The document to analyze",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Structured analysis JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contracts/analyze-comprehensive": {
            "post": {
                "description": "Performs comprehensive contract analysis using LLM including summary extraction, payment obligations identification, percentage-based calculations, and risk assessment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract Analysis"
                ],
                "summary": "Analyze contract comprehensively",
                "parameters": [
                    {
                        "description": "Contract text to analyze",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AnalyzeContractRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comprehensive analysis result",
                        "schema": {
                            "$ref": "#/definitions/analysis.AnalyzeContractResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contracts/upload": {
            "post": {
                "description": "Upload a single document (PDF, DOCX, TXT, JPG, PNG, TIFF) with a 10MB size limit.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Upload a document for analysis",
                "parameters": [
                    {
                        "type": "file",
                        "description": "The document to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns the ID of the uploaded document",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request if the file is missing, invalid, or too large",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contracts/upload-analyze": {
            "post": {
                "description": "Uploads a document, securely stores it, performs one-step multimodal analysis for scanned PDFs, and returns the stored document_id along with structured analysis JSON.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Upload and analyze a contract in one step",
                "parameters": [
                    {
                        "type": "file",
                        "description": "The document to upload and analyze",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns document_id and analysis JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request if the file is missing, invalid, or too large",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contracts/{document_id}/elements": {
            "get": {
                "description": "Analyzes a stored document to extract detailed contract elements including parties, obligations, and terms",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Detect contract elements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document ID",
                        "name": "document_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract elements detection result",
                        "schema": {
                            "$ref": "#/definitions/models.ContractElementsResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contracts/{id}": {
            "get": {
                "description": "Get a single document's metadata by its unique ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Get a document by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Contract"
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single document by its unique ID. This will remove the file from storage and the record from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Delete a document by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Document not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contracts/{id}/analysis": {
            "get": {
                "description": "Retrieves the structured analysis JSON for a previously analyzed document.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Get analysis results for a document",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Analysis results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Document not found or no analysis available",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the health status of the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "Checks if the service is ready to handle requests by verifying database connectivity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Readiness check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "analysis.AnalyzeContractResult": {
            "type": "object",
            "properties": {
                "analysis": {
                    "$ref": "#/definitions/models.ContractAnalysis"
                },
                "confidence_score": {
                    "type": "number"
                },
                "contract_id": {
                    "type": "string"
                },
                "payment_obligations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AnalysisMilestone"
                    }
                },
                "processed_at": {
                    "type": "string"
                },
                "risk_assessment": {
                    "$ref": "#/definitions/models.AnalysisRiskAssessment"
                },
                "summary": {
                    "$ref": "#/definitions/models.ContractSummary"
                },
                "validation_issues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.AnalyzeContractRequest": {
            "type": "object",
            "required": [
                "contract_text"
            ],
            "properties": {
                "contract_text": {
                    "type": "string",
                    "example": "This is a sample contract text..."
                }
            }
        },
        "handlers.HealthResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.AnalysisIndividualRisk": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "party": {
                    "type": "string"
                },
                "recommendation": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.AnalysisMilestone": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                }
            }
        },
        "models.AnalysisRisk": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.AnalysisRiskAssessment": {
            "type": "object",
            "properties": {
                "compliance_score": {
                    "type": "number"
                },
                "missing_clauses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "risks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AnalysisIndividualRisk"
                    }
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Contract": {
            "type": "object",
            "properties": {
                "analysis": {
                    "$ref": "#/definitions/models.ContractAnalysis"
                },
                "created_at": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "retention_days": {
                    "description": "Default 1 year",
                    "type": "integer"
                },
                "storage_path": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.ContractAnalysis": {
            "type": "object",
            "properties": {
                "buyer": {
                    "type": "string"
                },
                "buyer_address": {
                    "type": "string"
                },
                "buyer_country": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "milestones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AnalysisMilestone"
                    }
                },
                "risk_factors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AnalysisRisk"
                    }
                },
                "seller": {
                    "type": "string"
                },
                "seller_address": {
                    "type": "string"
                },
                "seller_country": {
                    "type": "string"
                },
                "total_value": {
                    "type": "number"
                }
            }
        },
        "models.ContractElementsResult": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "obligations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContractObligation"
                    }
                },
                "parties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContractParty"
                    }
                },
                "terms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContractTerm"
                    }
                }
            }
        },
        "models.ContractObligation": {
            "type": "object",
            "properties": {
                "deadline": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "party": {
                    "type": "string"
                },
                "type": {
                    "description": "e.g., \"payment\", \"delivery\", \"performance\"",
                    "type": "string"
                }
            }
        },
        "models.ContractParty": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "description": "e.g., \"buyer\", \"seller\", \"contractor\", \"client\"",
                    "type": "string"
                }
            }
        },
        "models.ContractSummary": {
            "type": "object",
            "properties": {
                "buyer_address": {
                    "type": "string"
                },
                "buyer_country": {
                    "type": "string"
                },
                "buyer_name": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "goods_nature": {
                    "type": "string"
                },
                "jurisdiction": {
                    "type": "string"
                },
                "seller_address": {
                    "type": "string"
                },
                "seller_country": {
                    "type": "string"
                },
                "seller_name": {
                    "type": "string"
                },
                "total_value": {
                    "type": "number"
                }
            }
        },
        "models.ContractTerm": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "type": {
                    "description": "e.g., \"payment\", \"termination\", \"warranty\"",
                    "type": "string"
                },
                "value": {
                    "description": "e.g., amount, duration",
                    "type": "string"
                }
            }
        },
        "repository.ContractAnalysisRecord": {
            "type": "object",
            "properties": {
                "analysis": {
                    "$ref": "#/definitions/models.ContractAnalysis"
                },
                "confidence_score": {
                    "type": "number"
                },
                "contract_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payment_obligations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AnalysisMilestone"
                    }
                },
                "payment_obligations_json": {
                    "type": "string"
                },
                "processed_at": {
                    "type": "string"
                },
                "risk_assessment": {
                    "$ref": "#/definitions/models.AnalysisRiskAssessment"
                },
                "risk_assessment_json": {
                    "type": "string"
                },
                "summary": {
                    "$ref": "#/definitions/models.ContractSummary"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "validation_issues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "validation_issues_json": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
