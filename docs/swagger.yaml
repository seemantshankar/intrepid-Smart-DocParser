definitions:
  analysis.AnalyzeContractResult:
    properties:
      analysis:
        $ref: '#/definitions/models.ContractAnalysis'
      confidence_score:
        type: number
      contract_id:
        type: string
      payment_obligations:
        items:
          $ref: '#/definitions/models.AnalysisMilestone'
        type: array
      processed_at:
        type: string
      risk_assessment:
        $ref: '#/definitions/models.AnalysisRiskAssessment'
      summary:
        $ref: '#/definitions/models.ContractSummary'
      validation_issues:
        items:
          type: string
        type: array
    type: object
  handlers.AnalyzeContractRequest:
    properties:
      contract_text:
        example: This is a sample contract text...
        type: string
    required:
    - contract_text
    type: object
  handlers.HealthResponse:
    properties:
      details:
        additionalProperties:
          type: string
        type: object
      status:
        type: string
    type: object
  models.AnalysisIndividualRisk:
    properties:
      description:
        type: string
      party:
        type: string
      recommendation:
        type: string
      severity:
        type: string
      type:
        type: string
    type: object
  models.AnalysisMilestone:
    properties:
      amount:
        type: number
      description:
        type: string
      percentage:
        type: number
    type: object
  models.AnalysisRisk:
    properties:
      description:
        type: string
      severity:
        type: string
      type:
        type: string
    type: object
  models.AnalysisRiskAssessment:
    properties:
      compliance_score:
        type: number
      missing_clauses:
        items:
          type: string
        type: array
      risks:
        items:
          $ref: '#/definitions/models.AnalysisIndividualRisk'
        type: array
      suggestions:
        items:
          type: string
        type: array
    type: object
  models.Contract:
    properties:
      analysis:
        $ref: '#/definitions/models.ContractAnalysis'
      created_at:
        type: string
      filename:
        type: string
      id:
        type: string
      retention_days:
        description: Default 1 year
        type: integer
      storage_path:
        type: string
      user_id:
        type: string
    type: object
  models.ContractAnalysis:
    properties:
      buyer:
        type: string
      buyer_address:
        type: string
      buyer_country:
        type: string
      currency:
        type: string
      milestones:
        items:
          $ref: '#/definitions/models.AnalysisMilestone'
        type: array
      risk_factors:
        items:
          $ref: '#/definitions/models.AnalysisRisk'
        type: array
      seller:
        type: string
      seller_address:
        type: string
      seller_country:
        type: string
      total_value:
        type: number
    type: object
  models.ContractElementsResult:
    properties:
      confidence:
        type: number
      obligations:
        items:
          $ref: '#/definitions/models.ContractObligation'
        type: array
      parties:
        items:
          $ref: '#/definitions/models.ContractParty'
        type: array
      terms:
        items:
          $ref: '#/definitions/models.ContractTerm'
        type: array
    type: object
  models.ContractObligation:
    properties:
      deadline:
        type: string
      description:
        type: string
      party:
        type: string
      type:
        description: e.g., "payment", "delivery", "performance"
        type: string
    type: object
  models.ContractParty:
    properties:
      address:
        type: string
      contact:
        type: string
      name:
        type: string
      role:
        description: e.g., "buyer", "seller", "contractor", "client"
        type: string
    type: object
  models.ContractSummary:
    properties:
      buyer_address:
        type: string
      buyer_country:
        type: string
      buyer_name:
        type: string
      currency:
        type: string
      goods_nature:
        type: string
      jurisdiction:
        type: string
      seller_address:
        type: string
      seller_country:
        type: string
      seller_name:
        type: string
      total_value:
        type: number
    type: object
  models.ContractTerm:
    properties:
      description:
        type: string
      type:
        description: e.g., "payment", "termination", "warranty"
        type: string
      value:
        description: e.g., amount, duration
        type: string
    type: object
  repository.ContractAnalysisRecord:
    properties:
      analysis:
        $ref: '#/definitions/models.ContractAnalysis'
      confidence_score:
        type: number
      contract_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      payment_obligations:
        items:
          $ref: '#/definitions/models.AnalysisMilestone'
        type: array
      payment_obligations_json:
        type: string
      processed_at:
        type: string
      risk_assessment:
        $ref: '#/definitions/models.AnalysisRiskAssessment'
      risk_assessment_json:
        type: string
      summary:
        $ref: '#/definitions/models.ContractSummary'
      updated_at:
        type: string
      user_id:
        type: string
      validation_issues:
        items:
          type: string
        type: array
      validation_issues_json:
        type: string
      version:
        type: integer
    type: object
info:
  contact: {}
paths:
  /analysis/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves contract analysis by its unique identifier
      parameters:
      - description: Analysis ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contract analysis record
          schema:
            $ref: '#/definitions/repository.ContractAnalysisRecord'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get analysis by ID
      tags:
      - Contract Analysis
  /contract-analyses:
    get:
      consumes:
      - application/json
      description: Lists contract analyses with optional filtering and pagination
      parameters:
      - default: 20
        description: Limit for pagination
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of contract analyses
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List contract analyses
      tags:
      - Contract Analysis
  /contract-analysis/{contract_id}:
    get:
      consumes:
      - application/json
      description: Retrieves comprehensive analysis results for a specific contract
      parameters:
      - description: Contract ID
        in: path
        name: contract_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contract analysis record
          schema:
            $ref: '#/definitions/repository.ContractAnalysisRecord'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get contract analysis by contract ID
      tags:
      - Contract Analysis
  /contracts/{document_id}/elements:
    get:
      description: Analyzes a stored document to extract detailed contract elements
        including parties, obligations, and terms
      parameters:
      - description: Document ID
        in: path
        name: document_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Contract elements detection result
          schema:
            $ref: '#/definitions/models.ContractElementsResult'
        "400":
          description: Bad request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Document not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Detect contract elements
      tags:
      - Documents
  /contracts/{id}:
    delete:
      description: Delete a single document by its unique ID. This will remove the
        file from storage and the record from the database.
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Document not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a document by ID
      tags:
      - Documents
    get:
      description: Get a single document's metadata by its unique ID.
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Contract'
        "404":
          description: Document not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a document by ID
      tags:
      - Documents
  /contracts/{id}/analysis:
    get:
      description: Retrieves the structured analysis JSON for a previously analyzed
        document.
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Analysis results
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Document not found or no analysis available
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get analysis results for a document
      tags:
      - Documents
  /contracts/analyze:
    post:
      consumes:
      - multipart/form-data
      description: Upload a document (PDF preferred). If scanned, pages are rasterized
        and OCR'd. The extracted text is analyzed using LLM prompts to return structured
        JSON.
      parameters:
      - description: The document to analyze
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Structured analysis JSON
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Analyze a contract document
      tags:
      - Analysis
  /contracts/analyze-comprehensive:
    post:
      consumes:
      - application/json
      description: Performs comprehensive contract analysis using LLM including summary
        extraction, payment obligations identification, percentage-based calculations,
        and risk assessment
      parameters:
      - description: Contract text to analyze
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.AnalyzeContractRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Comprehensive analysis result
          schema:
            $ref: '#/definitions/analysis.AnalyzeContractResult'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Analyze contract comprehensively
      tags:
      - Contract Analysis
  /contracts/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload a single document (PDF, DOCX, TXT, JPG, PNG, TIFF) with
        a 10MB size limit.
      parameters:
      - description: The document to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Returns the ID of the uploaded document
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request if the file is missing, invalid, or too large
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload a document for analysis
      tags:
      - Documents
  /contracts/upload-analyze:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a document, securely stores it, performs one-step multimodal
        analysis for scanned PDFs, and returns the stored document_id along with structured
        analysis JSON.
      parameters:
      - description: The document to upload and analyze
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Returns document_id and analysis JSON
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request if the file is missing, invalid, or too large
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload and analyze a contract in one step
      tags:
      - Documents
  /health:
    get:
      consumes:
      - application/json
      description: Returns the health status of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
      summary: Health check endpoint
      tags:
      - health
  /ready:
    get:
      consumes:
      - application/json
      description: Checks if the service is ready to handle requests by verifying
        database connectivity
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
      summary: Readiness check endpoint
      tags:
      - health
swagger: "2.0"
