definitions:
  handlers.HealthResponse:
    properties:
      details:
        additionalProperties:
          type: string
        type: object
      status:
        type: string
    type: object
  models.ComplianceReport:
    properties:
      is_compliant:
        type: boolean
      missing_clauses:
        items:
          type: string
        type: array
      report:
        type: string
      suggestions:
        items:
          type: string
        type: array
    type: object
  models.Contract:
    properties:
      compliance:
        $ref: '#/definitions/models.ComplianceReport'
      confidence_score:
        type: number
      contract_hash:
        type: string
      contract_type:
        type: string
      created_at:
        type: string
      file_path:
        type: string
      id:
        type: string
      knowledge_id:
        type: string
      milestones:
        items:
          $ref: '#/definitions/models.Milestone'
        type: array
      risks:
        items:
          $ref: '#/definitions/models.RiskAssessment'
        type: array
      status:
        $ref: '#/definitions/models.ContractStatus'
      summary:
        $ref: '#/definitions/models.ContractSummary'
      updated_at:
        type: string
      validation:
        $ref: '#/definitions/models.ValidationResult'
    type: object
  models.ContractStatus:
    enum:
    - validated
    - analyzed
    type: string
    x-enum-varnames:
    - Validated
    - Analyzed
  models.ContractSummary:
    properties:
      buyer_address:
        type: string
      buyer_country:
        type: string
      buyer_name:
        type: string
      currency:
        type: string
      goods_nature:
        type: string
      jurisdiction:
        type: string
      seller_address:
        type: string
      seller_country:
        type: string
      seller_name:
        type: string
      total_value:
        type: number
    type: object
  models.Milestone:
    properties:
      amount:
        type: number
      category:
        type: string
      contract_id:
        type: string
      dependencies:
        items:
          type: string
        type: array
      description:
        type: string
      id:
        type: string
      oracle_config:
        $ref: '#/definitions/models.OracleConfig'
      percentage:
        type: number
      sequence_order:
        type: integer
      trigger_condition:
        type: string
      verification_method:
        $ref: '#/definitions/models.VerificationMethod'
    type: object
  models.OracleConfig:
    properties:
      api_key:
        type: string
      endpoint:
        type: string
    type: object
  models.RiskAssessment:
    properties:
      contract_id:
        type: string
      description:
        type: string
      id:
        type: string
      industry_reference:
        type: string
      recommendation:
        type: string
      severity:
        $ref: '#/definitions/models.Severity'
      type:
        type: string
    type: object
  models.Severity:
    enum:
    - low
    - medium
    - high
    - critical
    type: string
    x-enum-varnames:
    - Low
    - Medium
    - High
    - Critical
  models.ValidationResult:
    properties:
      confidence:
        type: number
      contract_type:
        type: string
      detected_elements:
        items:
          type: string
        type: array
      is_valid_contract:
        type: boolean
      missing_elements:
        items:
          type: string
        type: array
      reason:
        type: string
    type: object
  models.VerificationMethod:
    enum:
    - manual
    - oracle
    - hybrid
    - api
    type: string
    x-enum-varnames:
    - Manual
    - Oracle
    - Hybrid
    - API
info:
  contact: {}
paths:
  /contracts/{id}:
    delete:
      description: Delete a single document by its unique ID. This will remove the
        file from storage and the record from the database.
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Document not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a document by ID
      tags:
      - Documents
    get:
      description: Get a single document's metadata by its unique ID.
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Contract'
        "404":
          description: Document not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a document by ID
      tags:
      - Documents
  /contracts/analyze:
    post:
      consumes:
      - multipart/form-data
      description: Upload a document (PDF preferred). If scanned, pages are rasterized
        and OCR'd. The extracted text is analyzed using LLM prompts to return structured
        JSON.
      parameters:
      - description: The document to analyze
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Structured analysis JSON
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Analyze a contract document
      tags:
      - Analysis
  /contracts/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload a single document (PDF, DOCX, TXT, JPG, PNG, TIFF) with
        a 10MB size limit.
      parameters:
      - description: The document to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Returns the ID of the uploaded document
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad request if the file is missing, invalid, or too large
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload a document for analysis
      tags:
      - Documents
  /contracts/upload-analyze:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a document, securely stores it, performs one-step multimodal
        analysis for scanned PDFs, and returns the stored document_id along with structured
        analysis JSON.
      parameters:
      - description: The document to upload and analyze
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Returns document_id and analysis JSON
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request if the file is missing, invalid, or too large
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Upload and analyze a contract in one step
      tags:
      - Documents
  /health:
    get:
      consumes:
      - application/json
      description: Returns the health status of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
      summary: Health check endpoint
      tags:
      - health
  /ready:
    get:
      consumes:
      - application/json
      description: Checks if the service is ready to handle requests by verifying
        database connectivity
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
      summary: Readiness check endpoint
      tags:
      - health
swagger: "2.0"
