{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/contracts/analyze": {
            "post": {
                "description": "Upload a document (PDF preferred). If scanned, pages are rasterized and OCR'd. The extracted text is analyzed using LLM prompts to return structured JSON.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analysis"
                ],
                "summary": "Analyze a contract document",
                "parameters": [
                    {
                        "type": "file",
                        "description": "The document to analyze",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Structured analysis JSON",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contracts/upload": {
            "post": {
                "description": "Upload a single document (PDF, DOCX, TXT, JPG, PNG, TIFF) with a 10MB size limit.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Upload a document for analysis",
                "parameters": [
                    {
                        "type": "file",
                        "description": "The document to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns the ID of the uploaded document",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request if the file is missing, invalid, or too large",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/contracts/{id}": {
            "get": {
                "description": "Get a single document's metadata by its unique ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Get a document by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Contract"
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a single document by its unique ID. This will remove the file from storage and the record from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Documents"
                ],
                "summary": "Delete a document by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Document not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the health status of the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "Checks if the service is ready to handle requests by verifying database connectivity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Readiness check endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.HealthResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.ReadinessResponse": {
            "type": "object",
            "properties": {
                "database": {
                    "type": "string",
                    "example": "ok"
                },
                "status": {
                    "type": "string",
                    "example": "ready"
                }
            }
        },
        "models.ComplianceReport": {
            "type": "object",
            "properties": {
                "is_compliant": {
                    "type": "boolean"
                },
                "missing_clauses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "report": {
                    "type": "string"
                },
                "suggestions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Contract": {
            "type": "object",
            "properties": {
                "compliance": {
                    "$ref": "#/definitions/models.ComplianceReport"
                },
                "confidence_score": {
                    "type": "number"
                },
                "contract_hash": {
                    "type": "string"
                },
                "contract_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "file_path": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "knowledge_id": {
                    "type": "string"
                },
                "milestones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Milestone"
                    }
                },
                "risks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.RiskAssessment"
                    }
                },
                "status": {
                    "$ref": "#/definitions/models.ContractStatus"
                },
                "summary": {
                    "$ref": "#/definitions/models.ContractSummary"
                },
                "updated_at": {
                    "type": "string"
                },
                "validation": {
                    "$ref": "#/definitions/models.ValidationResult"
                }
            }
        },
        "models.ContractStatus": {
            "type": "string",
            "enum": [
                "validated",
                "analyzed"
            ],
            "x-enum-varnames": [
                "Validated",
                "Analyzed"
            ]
        },
        "models.ContractSummary": {
            "type": "object",
            "properties": {
                "buyer_name": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "goods_nature": {
                    "type": "string"
                },
                "jurisdiction": {
                    "type": "string"
                },
                "seller_name": {
                    "type": "string"
                },
                "total_value": {
                    "type": "number"
                }
            }
        },
        "models.Milestone": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "category": {
                    "type": "string"
                },
                "contract_id": {
                    "type": "string"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "oracle_config": {
                    "$ref": "#/definitions/models.OracleConfig"
                },
                "percentage": {
                    "type": "number"
                },
                "sequence_order": {
                    "type": "integer"
                },
                "trigger_condition": {
                    "type": "string"
                },
                "verification_method": {
                    "$ref": "#/definitions/models.VerificationMethod"
                }
            }
        },
        "models.OracleConfig": {
            "type": "object",
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "endpoint": {
                    "type": "string"
                }
            }
        },
        "models.RiskAssessment": {
            "type": "object",
            "properties": {
                "contract_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "industry_reference": {
                    "type": "string"
                },
                "recommendation": {
                    "type": "string"
                },
                "severity": {
                    "$ref": "#/definitions/models.Severity"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Severity": {
            "type": "string",
            "enum": [
                "low",
                "medium",
                "high",
                "critical"
            ],
            "x-enum-varnames": [
                "Low",
                "Medium",
                "High",
                "Critical"
            ]
        },
        "models.ValidationResult": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number"
                },
                "contract_type": {
                    "type": "string"
                },
                "detected_elements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_valid_contract": {
                    "type": "boolean"
                },
                "missing_elements": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "models.VerificationMethod": {
            "type": "string",
            "enum": [
                "manual",
                "oracle",
                "hybrid",
                "api"
            ],
            "x-enum-varnames": [
                "Manual",
                "Oracle",
                "Hybrid",
                "API"
            ]
        }
    }
}